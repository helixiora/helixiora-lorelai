services:
  redis:
    image: redis:7.4-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: mysql:8.4
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_HOST: ${DB_HOST}
      MYSQL_PORT: ${DB_PORT}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - '3306:3306'
    volumes:
      - db-data:/var/lib/mysql
      - ./db:/docker-entrypoint-initdb.d
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  web:
    image: ghcr.io/helixiora/helixiora-lorelai/web:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: web-development
    ports:
      - "5000:5000"
    env_file:
      - .env
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=${FLASK_ENV}
      - FLASK_DEBUG=${FLASK_DEBUG}
      - SQLALCHEMY_DATABASE_URI=mysql+mysqlconnector://root:${DB_ROOT_PASSWORD}@db:3306/${DB_NAME}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis
    command: flask run --host=0.0.0.0
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - .git/
            - .venv/
            - __pycache__/
        - action: rebuild
          path: requirements.txt
        - action: rebuild
          path: Dockerfile

  worker:
    image: ghcr.io/helixiora/helixiora-lorelai/worker:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: worker-development
    env_file:
      - .env
    environment:
      - SQLALCHEMY_DATABASE_URI=mysql+mysqlconnector://root:test123@db:3306/lorelai
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - .git/
            - .venv/
            - __pycache__/
        - action: rebuild
          path: requirements.txt
        - action: rebuild
          path: Dockerfile

volumes:
  redis-data:
  db-data:

networks:
  default:
