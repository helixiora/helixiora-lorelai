services:
  redis:
    image: redis:alpine
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: 'lorelai'
      MYSQL_ROOT_PASSWORD: 'test123'
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - '3306:3306'
    volumes:
      - db-data:/var/lib/mysql
      - ./db/baseline_schema.sql:/docker-entrypoint-initdb.d/1-baseline_schema.sql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  flyway:
    image: flyway/flyway
    depends_on:
      db:
        condition: service_healthy
    environment:
      - FLYWAY_URL=jdbc:mysql://db:3306/lorelai
      - FLYWAY_USER=root
      - FLYWAY_PASSWORD=test123
      - FLYWAY_SCHEMAS=lorelai
      - FLYWAY_LOCATIONS=filesystem:/flyway/sql
    volumes:
      - ./db/migrations:/flyway/sql
    command: migrate
    restart: on-failure

  web:
    image: "${WEB_IMAGE:-local/web:latest}"
    build:
      context: .
      dockerfile: Dockerfile
      target: web-development
    environment:
      - FLASK_APP=run.py
      - REDIS_URL=redis://redis:6379/0
      - OAUTHLIB_INSECURE_TRANSPORT=1
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=test123
      - DB_DATABASE=lorelai
      - LOG_LEVEL=DEBUG
    volumes:
      - ./cert.pem:/app/cert.pem
      - ./key.pem:/app/key.pem
      - ./:/app
    ports:
      - "127.0.0.1:5000:5000"
    depends_on:
      - db
      - redis
    restart: on-failure

  worker:
    image: "${WORKER_IMAGE:-local/worker:latest}"
    build:
      context: .
      dockerfile: Dockerfile
      target: worker-development
    environment:
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - type: bind
        source: ./
        target: /app
    depends_on:
      - web
      - redis
    restart: on-failure

volumes:
  redis-data:
  db-data:

networks:
  default:
