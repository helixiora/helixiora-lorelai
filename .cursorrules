# Flask Application Guidelines

## 1. Project Structure
- Use a modular project structure with clear separation of concerns
- Follow the application factory pattern, run.py is the entry point with the factory in `project_root/app/factory.py`
- Organize code into blueprints for scalability

### Recommended Directory Layout
project_root/
├── app/
│ ├── templates/ # Jinja2 templates
│ ├── static/ # Static files
│ ├── models/ # Database models
│ ├── routes/ # Blueprint routes
│ └── init.py # App factory
├── migrations/ # Database migrations
├── tests/ # Test suite
├── config.py # Configuration
├── requirements.txt # Dependencies
└── run.py # Entry point

## 2. Code Organization
- Use blueprints for feature-based code organization
- Keep models in separate files by domain
- Implement clear configuration management
- Follow PEP 8 style guidelines

## 3. Security Best Practices
- Store secrets in environment variables
- Enable CSRF protection
- Use secure password hashing
- Implement proper session management
- Sanitize all user inputs

## 4. Database Guidelines
- Use SQLAlchemy for database operations
- Implement database migrations
- Follow proper session management
- Use appropriate indexing strategies

## 5. Testing Requirements
- Write unit tests for all features
- Maintain separate test configurations
- Use pytest as testing framework
- Aim for high test coverage

## 6. Deployment Considerations
- Use production-grade WSGI server
- Implement proper logging
- Configure error handling
- Set up monitoring
- Use SSL/TLS in production

## 7. Documentation
- Document API endpoints
- Maintain requirements.txt
- Include setup instructions
- Document configuration options
