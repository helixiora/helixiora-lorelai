# This docker file is used explicitly to build the package version of the flask app itself, hence no SSL.
# SSL termination should be handled outside of Flask for production.
# Use an explicit version of Python for consistent builds. Consider using slim variant for reduced size.
FROM python:3.11-slim

# Set the working directory in the container
WORKDIR /app

#Run GCC and G++
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    cmake \
    && rm -rf /var/lib/apt/lists/*

# Copy only the files needed for pip install to avoid cache busting the layer if unrelated files change.
COPY requirements.txt ./

# Install any needed packages specified in requirements.txt
# Consider using --upgrade pip and a virtual environment for even better practice.
RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Now copy SSL certificates and the rest of the application's code into the container
COPY cert.pem key.pem ./
COPY . .

# Make port 5000 available to the world outside this container
EXPOSE 5000

# Use Gunicorn to serve the Flask application; adjust the number of workers and host/port.
CMD ["gunicorn", "-w", "4", "-k", "gevent", "--timeout", "300", "-b", "0.0.0.0:5000", "run:app"]
