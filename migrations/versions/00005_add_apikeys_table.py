"""add APIKeys table.

Revision ID: 00005
Revises: 00004
Create Date: 2024-11-21 13:19:54.030903

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = "00005"
down_revision = "00004"
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Upgrade the database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_api_keys",
        sa.Column("user_api_key_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("api_key", sa.String(length=255), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("expires_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.user_id"],
        ),
        sa.PrimaryKeyConstraint("user_api_key_id"),
    )
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.drop_column("password_hash")

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade the database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.add_column(sa.Column("password_hash", mysql.VARCHAR(length=128), nullable=True))

    op.drop_table("user_api_keys")
    # ### end Alembic commands ###
