"""Initial migration

Revision ID: 1978391f226f
Revises:
Create Date: 2024-11-06 08:39:03.049699

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = "1978391f226f"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "extra_messages",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("quantity", mysql.INTEGER(unsigned=True), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("updated_at", sa.TIMESTAMP(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["user.user_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("user_id"),
    )
    op.drop_index("ix_messages_id", table_name="messages")
    op.drop_table("messages")
    op.drop_index("ix_conversations_id", table_name="conversations")
    op.drop_table("conversations")
    op.drop_index("flyway_schema_history_s_idx", table_name="flyway_schema_history")
    op.drop_table("flyway_schema_history")
    op.alter_column(
        "chat_messages",
        "created_at",
        existing_type=mysql.TIMESTAMP(),
        server_default=None,
        existing_nullable=True,
    )
    op.alter_column(
        "chat_threads",
        "created_at",
        existing_type=mysql.TIMESTAMP(),
        server_default=None,
        existing_nullable=True,
    )
    op.alter_column(
        "chat_threads",
        "marked_deleted",
        existing_type=mysql.TINYINT(display_width=1),
        server_default=None,
        type_=sa.Integer(),
        existing_nullable=True,
    )
    op.drop_index("unique_thread_id", table_name="chat_threads")
    op.create_foreign_key(None, "chat_threads", "user", ["user_id"], ["user_id"])
    op.alter_column(
        "google_drive_items",
        "created_at",
        existing_type=mysql.TIMESTAMP(),
        server_default=None,
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.alter_column(
        "google_drive_items",
        "last_indexed_at",
        existing_type=mysql.TIMESTAMP(),
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.create_foreign_key(None, "google_drive_items", "user", ["user_id"], ["user_id"])
    op.alter_column(
        "notifications",
        "id",
        existing_type=mysql.BIGINT(unsigned=True),
        type_=sa.Integer(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "notifications",
        "read",
        existing_type=mysql.TINYINT(display_width=1),
        server_default=None,
        existing_nullable=True,
    )
    op.alter_column(
        "notifications",
        "read_at",
        existing_type=mysql.TIMESTAMP(),
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.alter_column(
        "notifications",
        "dismissed",
        existing_type=mysql.TINYINT(display_width=1),
        server_default=None,
        existing_nullable=True,
    )
    op.alter_column(
        "notifications",
        "dismissed_at",
        existing_type=mysql.TIMESTAMP(),
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.alter_column(
        "notifications",
        "created_at",
        existing_type=mysql.TIMESTAMP(),
        server_default=None,
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.alter_column(
        "notifications",
        "updated_at",
        existing_type=mysql.TIMESTAMP(),
        server_default=None,
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.drop_index("id", table_name="notifications")
    op.create_foreign_key(None, "notifications", "user", ["user_id"], ["user_id"])
    op.alter_column("organisation", "name", existing_type=mysql.VARCHAR(length=255), nullable=False)
    op.alter_column(
        "plans",
        "created_at",
        existing_type=mysql.TIMESTAMP(),
        server_default=None,
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.alter_column(
        "plans",
        "updated_at",
        existing_type=mysql.TIMESTAMP(),
        server_default=None,
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.alter_column("user", "email", existing_type=mysql.VARCHAR(length=255), nullable=False)
    op.alter_column(
        "user",
        "created_at",
        existing_type=mysql.TIMESTAMP(),
        server_default=None,
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.create_unique_constraint(None, "user", ["google_id"])
    op.create_foreign_key(None, "user", "organisation", ["org_id"], ["id"])
    op.alter_column(
        "user_auth",
        "auth_value",
        existing_type=mysql.TEXT(),
        type_=sa.String(length=255),
        existing_nullable=False,
    )
    op.drop_index("user_id_datasource_id_key", table_name="user_auth")
    op.create_foreign_key(None, "user_auth", "datasource", ["datasource_id"], ["datasource_id"])
    op.create_foreign_key(None, "user_auth", "user", ["user_id"], ["user_id"])
    op.alter_column(
        "user_login",
        "login_time",
        existing_type=mysql.TIMESTAMP(),
        server_default=None,
        type_=sa.DateTime(),
        nullable=False,
    )
    op.alter_column(
        "user_login",
        "login_type",
        existing_type=mysql.VARCHAR(length=50),
        type_=sa.String(length=255),
        existing_nullable=False,
    )
    op.alter_column(
        "user_plans",
        "is_active",
        existing_type=mysql.TINYINT(display_width=1),
        server_default=None,
        existing_nullable=True,
    )
    op.alter_column(
        "user_plans",
        "created_at",
        existing_type=mysql.TIMESTAMP(),
        server_default=None,
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.alter_column(
        "user_plans",
        "updated_at",
        existing_type=mysql.TIMESTAMP(),
        server_default=None,
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.drop_index("idx_user_plans_plan_id", table_name="user_plans")
    op.drop_index("idx_user_plans_user_id", table_name="user_plans")
    op.drop_constraint("user_plans_ibfk_2", "user_plans", type_="foreignkey")
    op.drop_constraint("user_plans_ibfk_1", "user_plans", type_="foreignkey")
    op.create_foreign_key(None, "user_plans", "plans", ["plan_id"], ["plan_id"])
    op.create_foreign_key(None, "user_plans", "user", ["user_id"], ["user_id"])
    op.drop_constraint("user_profile_ibfk_1", "user_profile", type_="foreignkey")
    op.create_foreign_key(None, "user_profile", "user", ["user_id"], ["user_id"])
    op.create_foreign_key(None, "user_roles", "user", ["user_id"], ["user_id"])
    op.create_foreign_key(None, "user_roles", "roles", ["role_id"], ["role_id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "user_roles", type_="foreignkey")
    op.drop_constraint(None, "user_roles", type_="foreignkey")
    op.drop_constraint(None, "user_profile", type_="foreignkey")
    op.create_foreign_key(
        "user_profile_ibfk_1", "user_profile", "user", ["user_id"], ["user_id"], ondelete="CASCADE"
    )
    op.drop_constraint(None, "user_plans", type_="foreignkey")
    op.drop_constraint(None, "user_plans", type_="foreignkey")
    op.create_foreign_key(
        "user_plans_ibfk_1", "user_plans", "user", ["user_id"], ["user_id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        "user_plans_ibfk_2", "user_plans", "plans", ["plan_id"], ["plan_id"], ondelete="CASCADE"
    )
    op.create_index("idx_user_plans_user_id", "user_plans", ["user_id"], unique=False)
    op.create_index("idx_user_plans_plan_id", "user_plans", ["plan_id"], unique=False)
    op.alter_column(
        "user_plans",
        "updated_at",
        existing_type=sa.DateTime(),
        server_default=sa.text("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP"),
        type_=mysql.TIMESTAMP(),
        existing_nullable=True,
    )
    op.alter_column(
        "user_plans",
        "created_at",
        existing_type=sa.DateTime(),
        server_default=sa.text("CURRENT_TIMESTAMP"),
        type_=mysql.TIMESTAMP(),
        existing_nullable=True,
    )
    op.alter_column(
        "user_plans",
        "is_active",
        existing_type=mysql.TINYINT(display_width=1),
        server_default=sa.text("'1'"),
        existing_nullable=True,
    )
    op.alter_column(
        "user_login",
        "login_type",
        existing_type=sa.String(length=255),
        type_=mysql.VARCHAR(length=50),
        existing_nullable=False,
    )
    op.alter_column(
        "user_login",
        "login_time",
        existing_type=sa.DateTime(),
        server_default=sa.text("CURRENT_TIMESTAMP"),
        type_=mysql.TIMESTAMP(),
        nullable=True,
    )
    op.drop_constraint(None, "user_auth", type_="foreignkey")
    op.drop_constraint(None, "user_auth", type_="foreignkey")
    op.create_index(
        "user_id_datasource_id_key",
        "user_auth",
        ["user_id", "datasource_id", "auth_key"],
        unique=True,
    )
    op.alter_column(
        "user_auth",
        "auth_value",
        existing_type=sa.String(length=255),
        type_=mysql.TEXT(),
        existing_nullable=False,
    )
    op.drop_constraint(None, "user", type_="foreignkey")
    op.drop_constraint(None, "user", type_="unique")
    op.alter_column(
        "user",
        "created_at",
        existing_type=sa.DateTime(),
        server_default=sa.text("CURRENT_TIMESTAMP"),
        type_=mysql.TIMESTAMP(),
        existing_nullable=True,
    )
    op.alter_column("user", "email", existing_type=mysql.VARCHAR(length=255), nullable=True)
    op.alter_column(
        "plans",
        "updated_at",
        existing_type=sa.DateTime(),
        server_default=sa.text("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP"),
        type_=mysql.TIMESTAMP(),
        existing_nullable=True,
    )
    op.alter_column(
        "plans",
        "created_at",
        existing_type=sa.DateTime(),
        server_default=sa.text("CURRENT_TIMESTAMP"),
        type_=mysql.TIMESTAMP(),
        existing_nullable=True,
    )
    op.alter_column("organisation", "name", existing_type=mysql.VARCHAR(length=255), nullable=True)
    op.drop_constraint(None, "notifications", type_="foreignkey")
    op.create_index("id", "notifications", ["id"], unique=True)
    op.alter_column(
        "notifications",
        "updated_at",
        existing_type=sa.DateTime(),
        server_default=sa.text("CURRENT_TIMESTAMP"),
        type_=mysql.TIMESTAMP(),
        existing_nullable=True,
    )
    op.alter_column(
        "notifications",
        "created_at",
        existing_type=sa.DateTime(),
        server_default=sa.text("CURRENT_TIMESTAMP"),
        type_=mysql.TIMESTAMP(),
        existing_nullable=True,
    )
    op.alter_column(
        "notifications",
        "dismissed_at",
        existing_type=sa.DateTime(),
        type_=mysql.TIMESTAMP(),
        existing_nullable=True,
    )
    op.alter_column(
        "notifications",
        "dismissed",
        existing_type=mysql.TINYINT(display_width=1),
        server_default=sa.text("'0'"),
        existing_nullable=True,
    )
    op.alter_column(
        "notifications",
        "read_at",
        existing_type=sa.DateTime(),
        type_=mysql.TIMESTAMP(),
        existing_nullable=True,
    )
    op.alter_column(
        "notifications",
        "read",
        existing_type=mysql.TINYINT(display_width=1),
        server_default=sa.text("'0'"),
        existing_nullable=True,
    )
    op.alter_column(
        "notifications",
        "id",
        existing_type=sa.Integer(),
        type_=mysql.BIGINT(unsigned=True),
        existing_nullable=False,
        autoincrement=True,
    )
    op.drop_constraint(None, "google_drive_items", type_="foreignkey")
    op.alter_column(
        "google_drive_items",
        "last_indexed_at",
        existing_type=sa.DateTime(),
        type_=mysql.TIMESTAMP(),
        existing_nullable=True,
    )
    op.alter_column(
        "google_drive_items",
        "created_at",
        existing_type=sa.DateTime(),
        server_default=sa.text("CURRENT_TIMESTAMP"),
        type_=mysql.TIMESTAMP(),
        existing_nullable=True,
    )
    op.drop_column("google_drive_items", "icon_url")
    op.drop_column("google_drive_items", "item_url")
    op.drop_constraint(None, "chat_threads", type_="foreignkey")
    op.create_index("unique_thread_id", "chat_threads", ["thread_id"], unique=True)
    op.alter_column(
        "chat_threads",
        "marked_deleted",
        existing_type=sa.Integer(),
        server_default=sa.text("'0'"),
        type_=mysql.TINYINT(display_width=1),
        existing_nullable=True,
    )
    op.alter_column(
        "chat_threads",
        "created_at",
        existing_type=mysql.TIMESTAMP(),
        server_default=sa.text("CURRENT_TIMESTAMP"),
        existing_nullable=True,
    )
    op.alter_column(
        "chat_messages",
        "created_at",
        existing_type=mysql.TIMESTAMP(),
        server_default=sa.text("CURRENT_TIMESTAMP"),
        existing_nullable=True,
    )
    op.create_table(
        "flyway_schema_history",
        sa.Column("installed_rank", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("version", mysql.VARCHAR(length=50), nullable=True),
        sa.Column("description", mysql.VARCHAR(length=200), nullable=False),
        sa.Column("type", mysql.VARCHAR(length=20), nullable=False),
        sa.Column("script", mysql.VARCHAR(length=1000), nullable=False),
        sa.Column("checksum", mysql.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("installed_by", mysql.VARCHAR(length=100), nullable=False),
        sa.Column(
            "installed_on",
            mysql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column("execution_time", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("success", mysql.TINYINT(display_width=1), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("installed_rank"),
        mysql_collate="utf8mb4_0900_ai_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_index(
        "flyway_schema_history_s_idx", "flyway_schema_history", ["success"], unique=False
    )
    op.create_table(
        "conversations",
        sa.Column("id", mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            mysql.DATETIME(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
        mysql_collate="utf8mb4_0900_ai_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_index("ix_conversations_id", "conversations", ["id"], unique=False)
    op.create_table(
        "messages",
        sa.Column("id", mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("conversation_id", mysql.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("sender", mysql.VARCHAR(length=50), nullable=True),
        sa.Column("content", mysql.TEXT(), nullable=True),
        sa.Column(
            "created_at",
            mysql.DATETIME(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(["conversation_id"], ["conversations.id"], name="messages_ibfk_1"),
        sa.PrimaryKeyConstraint("id"),
        mysql_collate="utf8mb4_0900_ai_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_index("ix_messages_id", "messages", ["id"], unique=False)
    op.drop_table("extra_messages")
    # ### end Alembic commands ###
