"""Add stripe_customer_id to User and stripe_price_id to Plan.

Revision ID: 00015
Revises: 00014
Create Date: 2025-02-21 19:55:41.071358

"""

from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "00015"
down_revision: str | None = "00014"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade the database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("plans", schema=None) as batch_op:
        batch_op.add_column(sa.Column("stripe_price_id", sa.String(length=255), nullable=True))
        batch_op.create_unique_constraint(None, ["stripe_price_id"])

    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.add_column(sa.Column("stripe_customer_id", sa.String(length=255), nullable=True))
        batch_op.create_unique_constraint(None, ["stripe_customer_id"])

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade the database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="unique")
        batch_op.drop_column("stripe_customer_id")

    with op.batch_alter_table("plans", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="unique")
        batch_op.drop_column("stripe_price_id")

    # ### end Alembic commands ###
